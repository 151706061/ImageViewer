// generated by Fast Light User Interface Designer (fluid) version 1.0010

#ifndef liSpineModelGUI_h
#define liSpineModelGUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <liSpineModel.h>
#include <liVertebralSegmentGUI.h>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Browser.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Roller.H>

class SpineModelGUI {
  li::SpineModel::Pointer m_SpineModel;
  li::VertebralSegmentRegistrator::FluoroscopicImageType::Pointer m_Image;
  li::VertebralSegmentRegistrator::VolumeImageType::Pointer m_Volume;
public:
  SpineModelGUI(void);
  Fl_Window *spineWindow;
  Fl_Browser *segmentBrowser;
private:
  inline void cb_segmentBrowser_i(Fl_Browser*, void*);
  static void cb_segmentBrowser(Fl_Browser*, void*);
public:
  Fl_Counter *angleCounter;
private:
  inline void cb_angleCounter_i(Fl_Counter*, void*);
  static void cb_angleCounter(Fl_Counter*, void*);
public:
  Fl_Counter *xPositionCounter;
private:
  inline void cb_xPositionCounter_i(Fl_Counter*, void*);
  static void cb_xPositionCounter(Fl_Counter*, void*);
public:
  Fl_Counter *yPositionCounter;
private:
  inline void cb_yPositionCounter_i(Fl_Counter*, void*);
  static void cb_yPositionCounter(Fl_Counter*, void*);
public:
  Fl_Counter *zPositionCounter;
private:
  inline void cb_zPositionCounter_i(Fl_Counter*, void*);
  static void cb_zPositionCounter(Fl_Counter*, void*);
public:
  ~SpineModelGUI();
  void Show(void);
  void Hide(void);
  void SetSpineModel( li::SpineModel * model );
  void SetImage( li::VertebralSegmentRegistrator::FluoroscopicImageType * image );
  void SetVolume( li::VertebralSegmentRegistrator::VolumeImageType * volume );
  void UpdateGUI( void );
};
#endif
