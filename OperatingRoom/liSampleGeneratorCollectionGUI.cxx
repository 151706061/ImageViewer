// generated by Fast Light User Interface Designer (fluid) version 1.0009

#include "liSampleGeneratorCollectionGUI.h"

inline void liSampleGeneratorCollectionGUI::cb_generatorsBrowser_i(Fl_Browser*, void*) {
  ShowSampleGenerator();
}
void liSampleGeneratorCollectionGUI::cb_generatorsBrowser(Fl_Browser* o, void* v) {
  ((liSampleGeneratorCollectionGUI*)(o->parent()->user_data()))->cb_generatorsBrowser_i(o,v);
}

inline void liSampleGeneratorCollectionGUI::cb_Close_i(Fl_Button*, void*) {
  Hide();
}
void liSampleGeneratorCollectionGUI::cb_Close(Fl_Button* o, void* v) {
  ((liSampleGeneratorCollectionGUI*)(o->parent()->user_data()))->cb_Close_i(o,v);
}

liSampleGeneratorCollectionGUI::liSampleGeneratorCollectionGUI() {
  Fl_Window* w;
  { Fl_Window* o = controlWindow = new Fl_Window(209, 186, "Generator");
    w = o;
    o->user_data((void*)(this));
    { Fl_Browser* o = generatorsBrowser = new Fl_Browser(20, 20, 170, 120);
      o->type(2);
      o->callback((Fl_Callback*)cb_generatorsBrowser);
    }
    { Fl_Button* o = new Fl_Button(60, 150, 95, 25, "Close");
      o->callback((Fl_Callback*)cb_Close);
    }
    o->end();
  }
}

liSampleGeneratorCollectionGUI::~liSampleGeneratorCollectionGUI() {
}

void liSampleGeneratorCollectionGUI::Show(void) {
}

void liSampleGeneratorCollectionGUI::Hide(void) {
}

void liSampleGeneratorCollectionGUI::ShowSampleGenerator(void) {
}
