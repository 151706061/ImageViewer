// generated by Fast Light User Interface Designer (fluid) version 1.0009

#ifndef liVesselsModelGUI_h
#define liVesselsModelGUI_h
#include <FL/Fl.H>
#include <FL/Fl_Window.H>
#include <liVectorTubes3D.h>
#include <FL/Fl_Tabs.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Adjuster.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Check_Button.H>
#include <FL/Fl_Button.H>
#include <liVesselsRegistrator.h>
#include <fltkRegularStepGradientDescent.h>
#include <FL/Fl_Scroll.H>
#include <FL/Fl_Tile.H>

class VesselsModelGUI {
  li::VectorTubes3D::Pointer m_Vessels;
  li::VesselsRegistrator::Pointer m_Registrator;
  fltk::RegularStepGradientDescent<
    li::VesselsRegistrator::RegistrationOptimizer > m_OptimizerGUI;
public:
  VesselsModelGUI();
  Fl_Window *controlWindow;
  Fl_Value_Output *xExternalOffsetValueOutput;
  Fl_Value_Output *yExternalOffsetValueOutput;
  Fl_Value_Output *zExternalOffsetValueOutput;
  Fl_Adjuster *xExternalOffsetAdjuster;
private:
  inline void cb_xExternalOffsetAdjuster_i(Fl_Adjuster*, void*);
  static void cb_xExternalOffsetAdjuster(Fl_Adjuster*, void*);
public:
  Fl_Adjuster *yExternalOffsetAdjuster;
private:
  inline void cb_yExternalOffsetAdjuster_i(Fl_Adjuster*, void*);
  static void cb_yExternalOffsetAdjuster(Fl_Adjuster*, void*);
public:
  Fl_Adjuster *zExternalOffsetAdjuster;
private:
  inline void cb_zExternalOffsetAdjuster_i(Fl_Adjuster*, void*);
  static void cb_zExternalOffsetAdjuster(Fl_Adjuster*, void*);
public:
  Fl_Value_Output *xInternalOffsetValueOutput;
  Fl_Value_Output *yInternalOffsetValueOutput;
  Fl_Value_Output *zInternalOffsetValueOutput;
  Fl_Adjuster *xInternalOffsetAdjuster;
  Fl_Adjuster *yInternalOffsetAdjuster;
  Fl_Adjuster *zInternalOffsetAdjuster;
  static Fl_Menu_Item menu_Draw[];
private:
  inline void cb_None_i(Fl_Menu_*, void*);
  static void cb_None(Fl_Menu_*, void*);
  inline void cb_Points_i(Fl_Menu_*, void*);
  static void cb_Points(Fl_Menu_*, void*);
  inline void cb_Lines_i(Fl_Menu_*, void*);
  static void cb_Lines(Fl_Menu_*, void*);
  inline void cb_Triangles_i(Fl_Menu_*, void*);
  static void cb_Triangles(Fl_Menu_*, void*);
  inline void cb_SurfacePoints_i(Fl_Menu_*, void*);
  static void cb_SurfacePoints(Fl_Menu_*, void*);
public:
  Fl_Check_Button *displayClusterCheckButton;
private:
  inline void cb_displayClusterCheckButton_i(Fl_Check_Button*, void*);
  static void cb_displayClusterCheckButton(Fl_Check_Button*, void*);
  inline void cb_Registration_i(Fl_Button*, void*);
  static void cb_Registration(Fl_Button*, void*);
public:
  virtual ~VesselsModelGUI();
  virtual void Show(void);
  virtual void Hide(void);
  virtual void SetExternalOffset(double x,double y,double z);
  virtual void SetInternalOffset(double x,double y,double z);
  virtual void SetVesselsModel(li::VectorTubes3D * vessels );
  virtual void UpdateExternalOffset(void);
  virtual void SetDisplayPointSet(void);
  virtual void ShowRegistrationControl(void);
  virtual void SetImage( li::VesselsRegistrator::FluoroscopicImageType * image );
  li::VesselsRegistrator::Pointer GetRegistrator(void);
};
#endif
