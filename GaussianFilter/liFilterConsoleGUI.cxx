// generated by Fast Light User Interface Designer (fluid) version 1.0010

#include "liFilterConsoleGUI.h"

inline void liFilterConsoleGUI::cb_Load_i(Fl_Menu_*, void*) {
  Load();
}
void liFilterConsoleGUI::cb_Load(Fl_Menu_* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->user_data()))->cb_Load_i(o,v);
}

inline void liFilterConsoleGUI::cb_Quit_i(Fl_Menu_*, void*) {
  Quit();
}
void liFilterConsoleGUI::cb_Quit(Fl_Menu_* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->user_data()))->cb_Quit_i(o,v);
}

inline void liFilterConsoleGUI::cb_About_i(Fl_Menu_*, void*) {
  ShowAbout();
}
void liFilterConsoleGUI::cb_About(Fl_Menu_* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->user_data()))->cb_About_i(o,v);
}

Fl_Menu_Item liFilterConsoleGUI::menu_[] = {
 {"File", 0,  0, 0, 64, 0, 0, 14, 0},
 {"Load", 0,  (Fl_Callback*)liFilterConsoleGUI::cb_Load, 0, 0, 0, 0, 14, 0},
 {"Quit", 0,  (Fl_Callback*)liFilterConsoleGUI::cb_Quit, 0, 0, 0, 0, 14, 0},
 {0},
 {"Help", 0,  0, 0, 64, 0, 0, 14, 0},
 {"About...", 0,  (Fl_Callback*)liFilterConsoleGUI::cb_About, 0, 0, 0, 0, 14, 0},
 {0},
 {0},
 {0},
 {0},
 {0},
 {0}
};

inline void liFilterConsoleGUI::cb_inputButton_i(li::LightButton*, void*) {
  ShowInput();
}
void liFilterConsoleGUI::cb_inputButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_inputButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_H1xButton_i(li::LightButton*, void*) {
  ShowFilteredX();
}
void liFilterConsoleGUI::cb_H1xButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_H1xButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_Execute_i(Fl_Button*, void*) {
  Execute();
}
void liFilterConsoleGUI::cb_Execute(Fl_Button* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_Execute_i(o,v);
}

inline void liFilterConsoleGUI::cb_Sigma_i(Fl_Counter* o, void*) {
  SetSigma( o->value() );
}
void liFilterConsoleGUI::cb_Sigma(Fl_Counter* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_Sigma_i(o,v);
}

inline void liFilterConsoleGUI::cb_H1zButton_i(li::LightButton*, void*) {
  ShowFilteredZ();
}
void liFilterConsoleGUI::cb_H1zButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_H1zButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_H1yButton_i(li::LightButton*, void*) {
  ShowFilteredY();
}
void liFilterConsoleGUI::cb_H1yButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_H1yButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_H2xButton_i(li::LightButton*, void*) {
  ShowSecondDerivativeX();
}
void liFilterConsoleGUI::cb_H2xButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_H2xButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_H2yButton_i(li::LightButton*, void*) {
  ShowSecondDerivativeY();
}
void liFilterConsoleGUI::cb_H2yButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_H2yButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_H2zButton_i(li::LightButton*, void*) {
  ShowSecondDerivativeZ();
}
void liFilterConsoleGUI::cb_H2zButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_H2zButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_laplacianButton_i(li::LightButton*, void*) {
  ShowLaplacian();
}
void liFilterConsoleGUI::cb_laplacianButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_laplacianButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_modulusButton_i(li::LightButton*, void*) {
  ShowGradientModulus();
}
void liFilterConsoleGUI::cb_modulusButton(li::LightButton* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_modulusButton_i(o,v);
}

inline void liFilterConsoleGUI::cb_2_i(Fl_Button*, void*) {
  WriteGradientX();
}
void liFilterConsoleGUI::cb_2(Fl_Button* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_2_i(o,v);
}

inline void liFilterConsoleGUI::cb_21_i(Fl_Button*, void*) {
  WriteGradientY();
}
void liFilterConsoleGUI::cb_21(Fl_Button* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_21_i(o,v);
}

inline void liFilterConsoleGUI::cb_22_i(Fl_Button*, void*) {
  WriteGradientZ();
}
void liFilterConsoleGUI::cb_22(Fl_Button* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_22_i(o,v);
}

inline void liFilterConsoleGUI::cb_23_i(Fl_Button*, void*) {
  WriteGradientModulus();
}
void liFilterConsoleGUI::cb_23(Fl_Button* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_23_i(o,v);
}

inline void liFilterConsoleGUI::cb_24_i(Fl_Button*, void*) {
  WriteLaplacian();
}
void liFilterConsoleGUI::cb_24(Fl_Button* o, void* v) {
  ((liFilterConsoleGUI*)(o->parent()->parent()->user_data()))->cb_24_i(o,v);
}

liFilterConsoleGUI::liFilterConsoleGUI() {
  Fl_Window* w;
  { Fl_Window* o = consoleWindow = new Fl_Window(757, 391, "Gaussian Filter Console");
    w = o;
    o->user_data((void*)(this));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 760, 25);
      o->menu(menu_);
    }
    { Fl_Group* o = Connectors = new Fl_Group(0, 25, 755, 365);
      { Fl_Box* o = new Fl_Box(539, 170, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(540, 75, 51, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(117, 100, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(117, 125, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(72, 125, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(117, 148, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(221, 100, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(221, 123, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(221, 147, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(112, 100, 10, 58);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(539, 50, 10, 60);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(504, 50, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(504, 75, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(504, 100, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(479, 145, 70, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(474, 170, 75, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(479, 195, 70, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(539, 145, 10, 60);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(366, 53, 55, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(366, 76, 55, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(366, 100, 55, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(366, 148, 53, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(366, 171, 53, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(366, 195, 53, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(330, 98, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(330, 121, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(330, 145, 45, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(365, 53, 10, 153);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      o->end();
    }
    { Fl_Group* o = controlsGroup = new Fl_Group(0, 25, 755, 365);
      o->deactivate();
      { li::LightButton* o = inputButton = new li::LightButton(27, 116, 69, 30, "Input");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_inputButton);
      }
      { li::LightButton* o = H1xButton = new li::LightButton(405, 44, 100, 24, "Gradient X");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_H1xButton);
      }
      { Fl_Button* o = new Fl_Button(520, 260, 80, 30, "Execute");
        o->box(FL_ROUND_UP_BOX);
        o->callback((Fl_Callback*)cb_Execute);
      }
      { Fl_Counter* o = new Fl_Counter(225, 260, 160, 25, "Sigma");
        o->minimum(-100);
        o->maximum(100);
        o->value(1);
        o->callback((Fl_Callback*)cb_Sigma);
        o->align(FL_ALIGN_TOP);
      }
      { li::LightButton* o = H1zButton = new li::LightButton(405, 92, 100, 25, "Gradient Z");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_H1zButton);
      }
      { li::LightButton* o = H1yButton = new li::LightButton(405, 68, 100, 24, "Gradient Y");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_H1yButton);
      }
      { li::LightButton* o = H2xButton = new li::LightButton(405, 139, 101, 24, "Second X");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_H2xButton);
      }
      { li::LightButton* o = H2yButton = new li::LightButton(405, 163, 101, 25, "Second Y");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_H2yButton);
      }
      { li::LightButton* o = H2zButton = new li::LightButton(405, 188, 101, 25, "Second Z");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_H2zButton);
      }
      { li::LightButton* o = laplacianButton = new li::LightButton(575, 163, 89, 25, "Laplacian");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_laplacianButton);
      }
      { li::LightButton* o = modulusButton = new li::LightButton(578, 68, 85, 25, "Modulus");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_modulusButton);
      }
      { Fl_Button* o = new Fl_Button(505, 44, 18, 24, "@2>");
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)cb_2);
      }
      { Fl_Button* o = new Fl_Button(505, 68, 18, 24, "@2>");
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)cb_21);
      }
      { Fl_Button* o = new Fl_Button(505, 93, 18, 24, "@2>");
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)cb_22);
      }
      { Fl_Button* o = new Fl_Button(664, 68, 19, 25, "@2>");
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)cb_23);
      }
      { Fl_Button* o = new Fl_Button(665, 163, 19, 25, "@2>");
        o->labeltype(FL_SYMBOL_LABEL);
        o->callback((Fl_Callback*)cb_24);
      }
      { li::LightButton* o = HxButton = new li::LightButton(139, 93, 90, 24, "Smooth X");
        o->type(0);
        o->value(1);
        o->selection_color(1);
      }
      { li::LightButton* o = HyButton = new li::LightButton(139, 117, 90, 24, "Smooth Y");
        o->type(0);
        o->value(1);
        o->selection_color(1);
      }
      { li::LightButton* o = HzButton = new li::LightButton(139, 141, 90, 25, "Smooth Z");
        o->type(0);
        o->value(1);
        o->selection_color(1);
      }
      { li::LightButton* o = HxyButton = new li::LightButton(254, 92, 98, 24, "Smooth XY");
        o->type(0);
        o->value(1);
        o->selection_color(1);
      }
      { li::LightButton* o = HyzButton = new li::LightButton(254, 116, 98, 24, "Smooth YZ");
        o->type(0);
        o->value(1);
        o->selection_color(1);
      }
      { li::LightButton* o = HzxButton = new li::LightButton(254, 140, 98, 25, "Smooth ZX");
        o->type(0);
        o->value(1);
        o->selection_color(1);
      }
      o->end();
    }
    { Fl_Slider* o = progressSlider = new Fl_Slider(5, 324, 735, 15);
      o->type(3);
      o->selection_color(2);
    }
    statusTextOutput = new Fl_Output(5, 349, 735, 25);
    o->end();
  }
  { Fl_Window* o = aboutWindow = new Fl_Window(392, 254, "About ...");
    w = o;
    o->box(FL_UP_BOX);
    o->user_data((void*)(this));
    { Fl_Button* o = new Fl_Button(20, 50, 355, 180, "../Documents/Art/itkLogo.xpm");
      o->box(FL_DOWN_BOX);
      o->color(7);
    }
    { Fl_Box* o = new Fl_Box(20, 15, 340, 35, "This program uses the INSIGHT Toolkit");
      o->labelsize(18);
    }
    o->end();
  }
}

liFilterConsoleGUI::~liFilterConsoleGUI() {
}

void liFilterConsoleGUI::Quit( void ) {
}

void liFilterConsoleGUI::Load( void ) {
}

void liFilterConsoleGUI::ShowInput( void ) {
}

void liFilterConsoleGUI::ShowFilteredX( void ) {
}

void liFilterConsoleGUI::ShowFilteredY( void ) {
}

void liFilterConsoleGUI::ShowFilteredZ( void ) {
}

void liFilterConsoleGUI::ShowSecondDerivativeX( void ) {
}

void liFilterConsoleGUI::ShowSecondDerivativeY( void ) {
}

void liFilterConsoleGUI::ShowSecondDerivativeZ( void ) {
}

void liFilterConsoleGUI::ShowLaplacian( void ) {
}

void liFilterConsoleGUI::ShowGradientModulus( void ) {
}

void liFilterConsoleGUI::ShowAbout( void ) {
}

void liFilterConsoleGUI::WriteGradientX( void ) {
}

void liFilterConsoleGUI::WriteGradientY( void ) {
}

void liFilterConsoleGUI::WriteGradientZ( void ) {
}

void liFilterConsoleGUI::WriteGradientModulus( void ) {
}

void liFilterConsoleGUI::WriteLaplacian( void ) {
}
