#!${TCL_TCLSH}

load ${CABLE_TCL_LIBRARY}
load ${ITK_BINARY_DIR}/Examples/TclWrappedImage/libImageTcl.so


# Create an object of itk::Image<char,3> class.
# the Tcl equivalent type is "itkImage"
#
set imagePointer [ itkImage_uchar_3 New ]


# Try the wrap::TypeOf command
#
puts "This is the type of an Image SmartPointer"
puts [ wrap::TypeOf $imagePointer ]




# Create an object of itk::ImageRegion<3> class
#
set imageRegion [ itkImageRegion_3 ]
set size        [ itkSize_3  ]
set start       [ itkIndex_3 ]

# Try the wrap::TypeOf command
#
puts "This is the type of an ImageRegion" 
puts [ wrap::TypeOf $imageRegion ]

puts "This is the type of an Size object" 
puts [ wrap::TypeOf $size ]

puts "This is the type of an Index object" 
puts [ wrap::TypeOf $start ]

#
#  Define the image region: size and index 
#
$size SetElement 0 100
$size SetElement 1 100
$size SetElement 2 100

$start SetElement 0 0
$start SetElement 1 0
$start SetElement 1 0


$imageRegion SetSize  $size
$imageRegion SetIndex $start


# The same can be achieved with the magic conversion operator
$size  SetSize    { 100 100 100 }
$start SetIndex   {   0   0   0 }

$imageRegion SetSize  $size
$imageRegion SetIndex $start




#
#  Print all the methods available for the image
# 
puts "These are the methods available for the image"
puts [ wrap::ListMethods [ $imagePointer ->] ]

puts "--- End of Image Methods ------------------\n"


#
#  Print all the methods available for "Size"
# 
puts "These are the methods available for the Size class"
puts [ wrap::ListMethods $size  ]

puts "--- End of Size Methods ------------------\n"





# Use the methods on the image
#
# NOTE: The Smart Pointer to the image is dereferenced
#       using the notation
#
#       [ $imagePointer -> ] 
#
[ $imagePointer -> ] GetBufferPointer


#
#  Typical allocation for an image
#
[ $imagePointer -> ] SetLargestPossibleRegion $imageRegion 
[ $imagePointer -> ] SetRequestedRegion       $imageRegion 
[ $imagePointer -> ] SetBufferedRegion        $imageRegion 
[ $imagePointer -> ] Allocate




