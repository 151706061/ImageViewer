/*=========================================================================

  Program:   Insight Segmentation & Registration Toolkit
  Module:    TripleTKGUI.cxx
  Language:  C++
  Date:      $Date$
  Version:   $Revision$

  Copyright (c) 2002 Insight Consortium. All rights reserved.
  See ITKCopyright.txt or http://www.itk.org/HTML/Copyright.htm for details.

     This software is distributed WITHOUT ANY WARRANTY; without even 
     the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR 
     PURPOSE.  See the above copyright notices for more information.

=========================================================================*/
// generated by Fast Light User Interface Designer (fluid) version 1.0011

#include "TripleTKGUI.h"

Fl_Window *window=(Fl_Window *)0;

TripleTK2D *tk2D=(TripleTK2D *)0;

TripleTK3D *tk3D=(TripleTK3D *)0;

Fl_Light_Button *allViewButton=(Fl_Light_Button *)0;

Fl_Light_Button *outlineButton=(Fl_Light_Button *)0;

Fl_Value_Slider *sliceNumberSlider=(Fl_Value_Slider *)0;

Fl_Value_Output *windowOutput=(Fl_Value_Output *)0;

Fl_Value_Output *levelOutput=(Fl_Value_Output *)0;

Fl_Check_Button *axial2D=(Fl_Check_Button *)0;

Fl_Check_Button *sagittal2D=(Fl_Check_Button *)0;

Fl_Check_Button *coronal2D=(Fl_Check_Button *)0;

Fl_Check_Button *levelWindowButton=(Fl_Check_Button *)0;

Fl_Check_Button *move2DButton=(Fl_Check_Button *)0;

Fl_Check_Button *zoom2DButton=(Fl_Check_Button *)0;

Fl_Check_Button *sliceViewButton=(Fl_Check_Button *)0;

Fl_Check_Button *axial3D=(Fl_Check_Button *)0;

Fl_Check_Button *sagittal3D=(Fl_Check_Button *)0;

Fl_Check_Button *coronal3D=(Fl_Check_Button *)0;

Fl_Menu_Item menu_[] = {
 {"FILE", 0,  0, 0, 192, 0, 11, 16, 0},
 {"Exit", 0x20,  (Fl_Callback*)fileExit_CB, 0, 0, 0, 0, 14, 0},
 {0},
 {0}
};

Fl_Window* make_window() {
  Fl_Window* w;
  { Fl_Window* o = window = new Fl_Window(790, 440, "TripleTKID");
    w = o;
    o->color(220);
    { TripleTK2D* o = tk2D = new TripleTK2D(45, 100, 310, 310, "2D");
      o->box(FL_UP_BOX);
    }
    { TripleTK3D* o = tk3D = new TripleTK3D(475, 100, 310, 310, "3D");
      o->box(FL_UP_BOX);
    }
    { Fl_Button* o = new Fl_Button(395, 95, 40, 40, "^");
      o->box(FL_DIAMOND_UP_BOX);
      o->callback((Fl_Callback*)upButton_CB);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = new Fl_Button(425, 125, 40, 40, ">");
      o->box(FL_DIAMOND_UP_BOX);
      o->labelsize(10);
      o->callback((Fl_Callback*)rightButton_CB);
    }
    { Fl_Button* o = new Fl_Button(365, 125, 40, 40, "<");
      o->box(FL_DIAMOND_UP_BOX);
      o->labelsize(10);
      o->callback((Fl_Callback*)leftButton_CB);
    }
    { Fl_Button* o = new Fl_Button(395, 155, 40, 40, "v");
      o->box(FL_DIAMOND_UP_BOX);
      o->labelsize(10);
      o->callback((Fl_Callback*)downButton_CB);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Button* o = new Fl_Button(395, 50, 40, 30, "Exit");
      o->box(FL_ROUND_UP_BOX);
      o->down_box(FL_ROUND_DOWN_BOX);
      o->labelcolor(1);
      o->callback((Fl_Callback*)buttonExit_CB);
    }
    { Fl_Button* o = new Fl_Button(370, 415, 90, 20, "Reset All");
      o->box(FL_ROUND_UP_BOX);
      o->down_box(FL_ROUND_DOWN_BOX);
      o->callback((Fl_Callback*)resetAll_CB);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Light_Button* o = allViewButton = new Fl_Light_Button(520, 415, 80, 20, "All Views");
      o->down_box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)allViews_CB);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Light_Button* o = outlineButton = new Fl_Light_Button(660, 415, 80, 20, "Outline");
      o->down_box(FL_DOWN_BOX);
      o->callback((Fl_Callback*)outline_CB);
      o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
    }
    { Fl_Value_Slider* o = sliceNumberSlider = new Fl_Value_Slider(10, 100, 25, 310, "Slice");
      o->type(4);
      o->labelfont(1);
      o->labelcolor(3);
      o->step(1);
      o->textsize(12);
      o->callback((Fl_Callback*)sliceNumberSlider_CB);
      o->align(FL_ALIGN_TOP);
    }
    { Fl_Value_Output* o = windowOutput = new Fl_Value_Output(250, 415, 60, 20, "Window:");
      o->labelfont(1);
      o->labelcolor(3);
    }
    { Fl_Value_Output* o = levelOutput = new Fl_Value_Output(90, 415, 60, 20, "Level:");
      o->labelfont(1);
      o->labelcolor(3);
    }
    { Fl_Group* o = new Fl_Group(45, 50, 310, 30);
      { Fl_Check_Button* o = axial2D = new Fl_Check_Button(45, 50, 90, 30, "Axial");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->value(1);
        o->selection_color(3);
        o->callback((Fl_Callback*)axial2D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = sagittal2D = new Fl_Check_Button(155, 50, 90, 30, "Sagittal");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)sagittal2D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = coronal2D = new Fl_Check_Button(265, 50, 90, 30, "Coronal");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)coronal2D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(365, 215, 100, 185);
      { Fl_Check_Button* o = levelWindowButton = new Fl_Check_Button(365, 365, 100, 35, "Level/Win");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)levelWindow_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = move2DButton = new Fl_Check_Button(365, 265, 100, 35, "Move 2D");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)move2D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = zoom2DButton = new Fl_Check_Button(365, 315, 100, 35, "Zoom 2D");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)zoom2D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = sliceViewButton = new Fl_Check_Button(365, 215, 100, 35, "Slice View");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->value(1);
        o->selection_color(3);
        o->callback((Fl_Callback*)sliceScroll_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Group* o = new Fl_Group(475, 50, 310, 30);
      { Fl_Check_Button* o = axial3D = new Fl_Check_Button(475, 50, 90, 30, "Axial");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->value(1);
        o->selection_color(3);
        o->callback((Fl_Callback*)axial3D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = sagittal3D = new Fl_Check_Button(585, 50, 90, 30, "Sagittal");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)sagittal3D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      { Fl_Check_Button* o = coronal3D = new Fl_Check_Button(695, 50, 90, 30, "Coronal");
        o->type(102);
        o->box(FL_UP_BOX);
        o->down_box(FL_DOWN_BOX);
        o->selection_color(3);
        o->callback((Fl_Callback*)coronal3D_CB);
        o->align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 790, 30);
      o->menu(menu_);
    }
    o->end();
    o->resizable(o);
  }
  return w;
}
