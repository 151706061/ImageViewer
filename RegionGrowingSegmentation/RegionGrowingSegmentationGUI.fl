# data file for the Fltk User Interface Designer (fluid)
version 1.0011 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
class RegionGrowingSegmentationGUI {open : {public RegionGrowingSegmentationBase}
} {
  Function {RegionGrowingSegmentationGUI()} {open
  } {
    Fl_Window consoleWindow {
      label {Region Growing Segmentation} open
      xywh {126 327 830 459}
      code0 {\#include <RegionGrowingSegmentationBase.h>}
      code1 {\#include <fltkLightButton.h>} visible
    } {
      Fl_Group Connectors {selected
        xywh {0 0 825 390}
      } {
        Fl_Box {} {
          xywh {64 47 85 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {490 38 108 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {170 50 9 70} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {170 125 9 70} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {300 36 108 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {301 142 108 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {300 240 108 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {300 36 9 214} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {170 202 9 48} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {60 116 85 9} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {195 191 115 9} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {491 143 108 10} box UP_BOX color 4
        }
        Fl_Box {} {
          xywh {490 240 108 10} box UP_BOX color 4
        }
      }
      Fl_Group controlsGroup {
        xywh {5 5 820 385}
      } {
        Fl_Light_Button inputImageButton {
          label {Input Image}
          callback {ShowInputImage();}
          xywh {129 41 96 25} type Normal value 1 selection_color 1 labelsize 12
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label Quit
          callback {this->Quit();}
          xywh {595 330 65 35} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button thresholdConnectedImageButton {
          label {Threshold Connected Image}
          callback {this->ShowConnectedThresholdImage();}
          xywh {565 20 110 50} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Connected Threshold}
          callback {m_ConnectedThresholdImageFilter->Update();}
          xywh {370 24 170 37} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Button {} {
          label {../../Documentation/Art/itkLogoSmall.gif}
          xywh {705 308 100 67} box DOWN_FRAME labeltype image
        }
        Fl_Counter lowerThresholdCounter {
          label Lower
          callback {m_ConnectedThresholdImageFilter->SetLower( static_cast<InputPixelType>( o->value() ) );}
          xywh {388 61 134 25} align 4 minimum 0 maximum 255 step 1 value 100
          code0 {o->lstep(10.0);}
        }
        Fl_Counter upperThresholdCounter {
          label Upper
          callback {m_ConnectedThresholdImageFilter->SetUpper( static_cast<InputPixelType>( o->value() ) );}
          xywh {388 86 134 25} align 4 minimum 0 maximum 255 step 1 value 200
          code0 {o->lstep( 10.0 );}
        }
        Fl_Group seedGroup {
          label {Seed Point} open
          xywh {123 232 95 115} box ENGRAVED_BOX align 17
        } {
          Fl_Value_Output xSeedPointValueOutput {
            label {X }
            xywh {151 257 55 25}
          }
          Fl_Value_Output ySeedPointValueOutput {
            label {Y }
            xywh {151 284 55 25}
          }
          Fl_Value_Output zSeedPointValueOutput {
            label {Z }
            xywh {151 311 55 25}
          }
        }
        Fl_Button {} {
          label {Curvature Flow}
          callback {m_CurvatureFlowImageFilter->Update();}
          xywh {110 102 130 37} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button homogeneousImageButton {
          label {Homogeneous Image}
          callback {ShowHomogeneousImage();}
          xywh {115 175 120 40} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Group curvatureFlowGroup {open
          xywh {21 101 75 115} box ENGRAVED_BOX align 17
        } {
          Fl_Value_Input timeStep {
            label TimeStep
            callback {m_CurvatureFlowImageFilter->SetTimeStep( o->value() );}
            xywh {31 126 55 25} align 1 maximum 10 value 0.25
          }
          Fl_Value_Input iterationsValueInput {
            label Iterations
            callback {m_CurvatureFlowImageFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
            xywh {31 171 55 25} align 1 minimum 1 maximum 100 value 2
          }
        }
        Fl_Button {} {
          label {Confidence Connected}
          callback {m_ConfidenceConnectedImageFilter->Update();}
          xywh {370 129 170 37} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button confidenceConnectedImageButton {
          label {Confidence Connected Image}
          callback {this->ShowConfidenceConnectedImage();}
          xywh {565 125 110 50} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
        Fl_Button {} {
          label {Fuzzy Connected}
          callback {m_ConfidenceConnectedImageFilter->Update();}
          xywh {370 227 170 37} box ROUND_UP_BOX labelsize 12 align 128
        }
        Fl_Light_Button fuzzyConnectedImageButton {
          label {Fuzzy Connected Image}
          callback {this->ShowFuzzyConnectedImage();}
          xywh {565 220 110 50} type Normal value 1 selection_color 1 labelsize 12 align 148
          class {fltk::LightButton}
        }
      }
      Fl_Slider progressSlider {
        xywh {10 397 810 15} type {Horz Fill} selection_color 2
        code0 {\#include <fltkProgressBar.h>}
        class {fltk::ProgressBar}
      }
      Fl_Output statusTextOutput {
        xywh {10 420 810 25}
      }
      Fl_Light_Button loadInputImageButton {
        label Load
        callback {this->LoadInputImage();}
        xywh {29 41 65 25} type Normal value 1 selection_color 1 labelsize 12
        class {fltk::LightButton}
      }
      Fl_Value_Input multiplierValueInput {
        label Multiplier
        callback {m_ConfidenceConnectedImageFilter->SetMultiplier( o->value() );}
        xywh {462 167 55 25} minimum 1 maximum 100 value 2.5
      }
      Fl_Value_Input iterationsConfidenceValueInput {
        label Iterations
        callback {m_ConfidenceConnectedImageFilter->SetNumberOfIterations( static_cast<unsigned int>( o->value() ) );}
        xywh {462 193 55 25} minimum 1 maximum 100 value 2
      }
      Fl_Value_Input fuzzyMeanValueInput {
        label Mean
        callback {m_FuzzyConnectedImageFilter->SetMean( o->value() );}
        xywh {465 265 55 25} minimum 1 maximum 100 value 2.5
      }
      Fl_Value_Input fuzzyVarianceValueInput {
        label Variance
        callback {m_FuzzyConnectedImageFilter->SetVariance( o->value() );}
        xywh {465 291 55 25} minimum 1 maximum 100 value 2.5
      }
      Fl_Value_Input fuzzyDiffMeanValueInput {
        label {Diff Mean}
        callback {m_FuzzyConnectedImageFilter->SetDiff_Mean( o->value() );}
        xywh {465 317 55 25} minimum 1 maximum 100 value 2.5
      }
      Fl_Value_Input fuzzyDiffVarianceValueInput {
        label {Diff Variance}
        callback {m_FuzzyConnectedImageFilter->SetDiff_Variance( o->value() );}
        xywh {465 344 55 25} minimum 1 maximum 100 value 2.5
      }
    }
  }
  Function {~RegionGrowingSegmentationGUI()} {return_type virtual
  } {}
  Function {Quit( void )} {return_type {virtual void}
  } {}
  Function {Load( void )} {return_type {virtual void}
  } {}
  Function {ShowAbout( void )} {return_type {virtual void}
  } {}
  Function {ShowInputImage( void )} {return_type {virtual void}
  } {}
  Function {ShowConnectedThresholdImage( void )} {return_type {virtual void}
  } {}
  Function {ShowConsole( void )} {return_type {virtual void}
  } {}
  Function {ShowHomogeneousImage( void )} {return_type {virtual void}
  } {}
  Function {ShowConfidenceConnectedImage( void )} {return_type {virtual void}
  } {}
  Function {ShowFuzzyConnectedImage( void )} {return_type {virtual void}
  } {}
} 
