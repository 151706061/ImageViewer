// generated by Fast Light User Interface Designer (fluid) version 1.0010

#include "liImageRegistrationConsoleGUI.h"

inline void liImageRegistrationConsoleGUI::cb_Load_i(Fl_Menu_*, void*) {
  Load();
}
void liImageRegistrationConsoleGUI::cb_Load(Fl_Menu_* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->user_data()))->cb_Load_i(o,v);
}

inline void liImageRegistrationConsoleGUI::cb_Quit_i(Fl_Menu_*, void*) {
  Quit();
}
void liImageRegistrationConsoleGUI::cb_Quit(Fl_Menu_* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->user_data()))->cb_Quit_i(o,v);
}

inline void liImageRegistrationConsoleGUI::cb_About_i(Fl_Menu_*, void*) {
  ShowAbout();
}
void liImageRegistrationConsoleGUI::cb_About(Fl_Menu_* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->user_data()))->cb_About_i(o,v);
}

Fl_Menu_Item liImageRegistrationConsoleGUI::menu_[] = {
 {"File", 0,  0, 0, 64, 0, 0, 14, 0},
 {"Load", 0,  (Fl_Callback*)liImageRegistrationConsoleGUI::cb_Load, 0, 0, 0, 0, 14, 0},
 {"Quit", 0,  (Fl_Callback*)liImageRegistrationConsoleGUI::cb_Quit, 0, 0, 0, 0, 14, 0},
 {0},
 {"Help", 0,  0, 0, 64, 0, 0, 14, 0},
 {"About...", 0,  (Fl_Callback*)liImageRegistrationConsoleGUI::cb_About, 0, 0, 0, 0, 14, 0},
 {0},
 {0},
 {0},
 {0},
 {0},
 {0}
};

inline void liImageRegistrationConsoleGUI::cb_targetButton_i(li::LightButton*, void*) {
  ShowTarget();
}
void liImageRegistrationConsoleGUI::cb_targetButton(li::LightButton* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_targetButton_i(o,v);
}

inline void liImageRegistrationConsoleGUI::cb_Start_i(Fl_Button*, void*) {
  Execute();
}
void liImageRegistrationConsoleGUI::cb_Start(Fl_Button* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_Start_i(o,v);
}

inline void liImageRegistrationConsoleGUI::cb_referenceButton_i(li::LightButton*, void*) {
  ShowReference();
}
void liImageRegistrationConsoleGUI::cb_referenceButton(li::LightButton* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_referenceButton_i(o,v);
}

inline void liImageRegistrationConsoleGUI::cb_Apply_i(Fl_Button*, void*) {
  GenerateReference();
}
void liImageRegistrationConsoleGUI::cb_Apply(Fl_Button* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_Apply_i(o,v);
}

inline void liImageRegistrationConsoleGUI::cb_Estimated_i(Fl_Button*, void*) {
  GenerateMappedReference();
}
void liImageRegistrationConsoleGUI::cb_Estimated(Fl_Button* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_Estimated_i(o,v);
}

inline void liImageRegistrationConsoleGUI::cb_mappedReferenceButton_i(li::LightButton*, void*) {
  ShowMappedReference();
}
void liImageRegistrationConsoleGUI::cb_mappedReferenceButton(li::LightButton* o, void* v) {
  ((liImageRegistrationConsoleGUI*)(o->parent()->parent()->user_data()))->cb_mappedReferenceButton_i(o,v);
}

liImageRegistrationConsoleGUI::liImageRegistrationConsoleGUI() {
  Fl_Window* w;
  { Fl_Window* o = consoleWindow = new Fl_Window(757, 391, "Image Registration Console");
    w = o;
    o->user_data((void*)(this));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 760, 25);
      o->menu(menu_);
    }
    { Fl_Group* o = Connectors = new Fl_Group(0, 25, 755, 365);
      { Fl_Box* o = new Fl_Box(65, 90, 8, 90);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(212, 170, 8, 90);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(108, 85, 215, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(325, 250, 160, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(212, 250, 55, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(320, 183, 8, 76);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(315, 85, 8, 90);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(346, 170, 105, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(478, 185, 8, 75);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(495, 170, 100, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(65, 170, 55, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      { Fl_Box* o = new Fl_Box(165, 170, 55, 10);
        o->box(FL_UP_BOX);
        o->color(4);
      }
      o->end();
    }
    { Fl_Group* o = controlsGroup = new Fl_Group(0, 25, 755, 365);
      o->deactivate();
      { li::LightButton* o = targetButton = new li::LightButton(20, 75, 105, 30, "Target");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_targetButton);
      }
      { Fl_Button* o = new Fl_Button(585, 255, 105, 45, "Start Regisration");
        o->box(FL_ROUND_UP_BOX);
        o->callback((Fl_Callback*)cb_Start);
        o->align(FL_ALIGN_WRAP);
      }
      { li::LightButton* o = referenceButton = new li::LightButton(235, 240, 105, 30, "Reference");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_referenceButton);
      }
      { Fl_Button* o = new Fl_Button(85, 150, 115, 55, "Apply Known Transformation");
        o->box(FL_ROUND_UP_BOX);
        o->callback((Fl_Callback*)cb_Apply);
        o->align(FL_ALIGN_WRAP);
      }
      { li::LightButton* o = registrationMethodButton = new li::LightButton(285, 148, 130, 51, "Registration Method");
        o->type(0);
        o->box(FL_ROUND_UP_BOX);
        o->value(1);
        o->selection_color(1);
        o->align(132|FL_ALIGN_INSIDE);
      }
      { Fl_Button* o = new Fl_Button(438, 151, 125, 49, "Estimated Transformation");
        o->box(FL_ROUND_UP_BOX);
        o->callback((Fl_Callback*)cb_Estimated);
        o->align(FL_ALIGN_WRAP);
      }
      { li::LightButton* o = mappedReferenceButton = new li::LightButton(585, 155, 105, 40, "Mapped Reference");
        o->type(0);
        o->value(1);
        o->selection_color(1);
        o->callback((Fl_Callback*)cb_mappedReferenceButton);
        o->align(132|FL_ALIGN_INSIDE);
      }
      o->end();
    }
    { Fl_Slider* o = progressSlider = new Fl_Slider(5, 324, 735, 15);
      o->type(3);
      o->selection_color(2);
    }
    statusTextOutput = new Fl_Output(5, 349, 735, 25);
    o->end();
  }
  { Fl_Window* o = aboutWindow = new Fl_Window(392, 254, "About ...");
    w = o;
    o->box(FL_UP_BOX);
    o->user_data((void*)(this));
    { Fl_Button* o = new Fl_Button(20, 50, 355, 180, "../Documents/Art/itkLogo.xpm");
      o->box(FL_DOWN_BOX);
      o->color(7);
    }
    { Fl_Box* o = new Fl_Box(20, 15, 340, 35, "This program uses the INSIGHT Toolkit");
      o->labelsize(18);
    }
    o->end();
  }
}

liImageRegistrationConsoleGUI::~liImageRegistrationConsoleGUI() {
}

void liImageRegistrationConsoleGUI::Quit( void ) {
}

void liImageRegistrationConsoleGUI::Load( void ) {
}

void liImageRegistrationConsoleGUI::ShowTarget( void ) {
}

void liImageRegistrationConsoleGUI::ShowReference( void ) {
}

void liImageRegistrationConsoleGUI::ShowAbout( void ) {
}

void liImageRegistrationConsoleGUI::ShowMappedReference( void ) {
}
