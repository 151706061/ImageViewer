# data file for the Fltk User Interface Designer (fluid)
version 1.00 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
class IViewGUI {open
} {
  decl {typedef void (*ImageNumSliderCBType)(unsigned short int imageNum);} {public
  }
  decl {typedef void (*OpenCBType)(void);} {public
  }
  decl {typedef void (*RemoveCBType)(void);} {public
  }
  decl {typedef void (*SaveCBType)(void);} {public
  }
  decl {ImageNumSliderCBType imageNumSliderCB;} {}
  decl {OpenCBType openImageCB, openOverlayCB;} {}
  decl {RemoveCBType removeCB;} {}
  decl {SaveCBType saveCB;} {}
  Function {IViewGUI()} {} {}
  Function {~IViewGUI()} {return_type virtual
  } {}
  Function {createGUI()} {} {
    code {imageNumSliderCB = NULL;
openImageCB = NULL;
openOverlayCB = NULL;
removeCB = NULL;
saveCB = NULL;} {}
    Fl_Window iviewWindow {
      label IView open
      xywh {961 562 315 430} labelsize 10 resizable
      code0 {\#include<itkImageRegionIterator.h>} visible
    } {
      Fl_Menu_Bar {} {open
        xywh {0 0 275 25}
        code0 {addMenuBarOptions();}
      } {
        submenu {} {
          label File
          xywh {0 0 100 20}
        } {
          menuitem OpenAdd {
            label {Open/Add}
            callback {if (openImageCB != NULL)
	openImageCB();}
            xywh {0 0 100 20} shortcut 0x4006f hide deactivate
          }
          menuitem AddOverlay {
            label {Add Overlay}
            callback {if (openOverlayCB != NULL)
	openOverlayCB();}
            xywh {10 10 100 20} hide deactivate
          }
          menuitem Remove {
            label Remove
            callback {if (removeCB != NULL)
	removeCB();}
            xywh {5 5 100 20} hide deactivate divider
          }
          menuitem {} {
            label Quit
            callback {iviewWindow->hide();}
            xywh {5 5 100 20} shortcut 0x40071
          }
        }
        submenu {} {
          label Filter
          xywh {0 0 100 20}
          code0 {addFilterMenuOptions();}
        } {
          menuitem {} {
            label Value
            callback {imageMode(IMG_VAL);}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label Log
            callback {imageMode(IMG_LOG);}
            xywh {10 10 100 20}
          }
          menuitem {} {
            label {X Deriv}
            callback {imageMode(IMG_DX);}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label {Y Deriv}
            callback {imageMode(IMG_DY);}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label {Z Deriv}
            callback {imageMode(IMG_DZ);}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label H
            callback {imageMode(IMG_H);}
            xywh {10 10 100 20}
          }
          menuitem {} {
            label MIP
            callback {imageMode(IMG_MIP);}
            xywh {20 20 100 20}
          }
        }
        submenu {} {
          label Orientation
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label FlipX
            callback {FlipX();}
            xywh {5 5 100 20}
          }
          menuitem {} {
            label FlipY
            callback {FlipY();}
            xywh {10 10 100 20} divider
          }
          menuitem {} {
            label XY
            callback {Orientation(2);}
            xywh {0 0 100 20}
          }
          menuitem {} {
            label XZ
            callback {Orientation(1);}
            xywh {10 10 100 20}
          }
          menuitem {} {
            label YZ
            callback {Orientation(0);}
            xywh {20 20 100 20}
          }
        }
      }
      Fl_Value_Slider sliceNumberSlider {
        label Slice
        callback {selectSlice((unsigned int)o->value());}
        xywh {290 25 20 280} type {Vert Knob} labelsize 10 align 1 step 1 textsize 9
      }
      Fl_Value_Slider imageNumberSlider {
        label Image
        callback {if (imageNumSliderCB != NULL)
	imageNumSliderCB((int) o->value());}
        xywh {5 335 80 20} type {Horz Knob} labelsize 9 maximum 0 step 1 hide deactivate
      }
      Fl_Value_Slider intensityWindowingMinSlider {
        callback {setIntensityWindowingMin(o->value());}
        xywh {0 390 315 20} type {Horz Fill} selection_color 32 labeltype NO_LABEL labelsize 9 step 1 value 1 textsize 9
      }
      Fl_Value_Slider intensityWindowingMaxSlider {
        callback {setIntensityWindowingMax(o->value());}
        xywh {0 410 315 20} type {Horz Fill} color 55 selection_color 47 labeltype NO_LABEL labelsize 9 step 1 value 1 textsize 9
      }
      Fl_Button {} {
        label {Zoom In}
        callback {zoomIn();}
        xywh {235 310 55 20} labelsize 10
      }
      Fl_Button {} {
        label {Zoom Out}
        callback {zoomOut();}
        xywh {235 365 55 20} labelsize 10
      }
      Fl_Button {} {
        label U
        callback {shiftUp();}
        xywh {180 310 35 35} box DIAMOND_UP_BOX labelsize 10
      }
      Fl_Button {} {
        label Reset
        callback {centerWindow();}
        xywh {245 335 35 25} box ROUND_UP_BOX labelsize 10
      }
      Fl_Button {} {
        label R
        callback {shiftRight();}
        xywh {200 330 35 35} box DIAMOND_UP_BOX labelsize 10
      }
      Fl_Button {} {
        label L
        callback {shiftLeft();}
        xywh {160 330 35 35} box DIAMOND_UP_BOX labelsize 10
      }
      Fl_Button {} {
        label D
        callback {shiftDown();}
        xywh {180 350 35 35} box DIAMOND_UP_BOX labelsize 10
      }
      Fl_Output selectedPointDisplay {
        xywh {5 315 165 20} labelsize 12 textsize 12
      }
      Fl_Group glWindowGroup {
        xywh {0 25 275 275}
      } {
        Fl_Box {} {
          label {3D Win}
          xywh {0 25 275 270} box EMBOSSED_BOX
          code0 {\#include <GLSliceView.h>}
          code1 {CreateGLSliceView( glWindowGroup, o );}
          class Fl_Gl_Window
        }
      }
    }
  }
  Function {addMenuBarOptions(void)} {return_type {virtual void}
  } {}
  Function {addFilterMenuOptions(void)} {return_type {virtual void}
  } {}
  Function {addFileMenuOptions(void)} {return_type {virtual void}
  } {}
  Function {open(void)} {return_type {virtual void}
  } {}
  Function {update(void)} {return_type {virtual void}
  } {}
  Function {show(void)} {return_type {virtual void}
  } {}
  Function {hide(void)} {return_type {virtual void}
  } {}
  Function {setImage(const PhysicalImage<float,3>::Pointer img)} {return_type {virtual void}
  } {}
  Function {imageMode(ImageModeType mode)} {return_type {virtual void}
  } {}
  Function {synchronize(void)} {return_type {virtual void}
  } {}
  Function {shiftUp(void)} {return_type {virtual void}
  } {}
  Function {shiftDown(void)} {return_type {virtual void}
  } {}
  Function {shiftLeft(void)} {return_type {virtual void}
  } {}
  Function {shiftRight(void)} {return_type {virtual void}
  } {}
  Function {selectSlice(unsigned int)} {return_type {virtual void}
  } {}
  Function {setIntensityWindowingMin(float)} {return_type {virtual void}
  } {}
  Function {setIntensityWindowingMax(float)} {return_type {virtual void}
  } {}
  Function {centerWindow(void)} {return_type {virtual void}
  } {}
  Function {zoomIn(void)} {return_type {virtual void}
  } {}
  Function {zoomOut(void)} {return_type {virtual void}
  } {}
  Function {FlipX(void)} {return_type {virtual void}
  } {}
  Function {CreateGLSliceView( Fl_Group *,Fl_Gl_Window * w )} {return_type {virtual void}
  } {
    code {std::cout << "bad create function" << std::endl;} {}
  }
  Function {FlipY(void)} {return_type {virtual void}
  } {}
  Function {Orientation(unsigned int)} {return_type {virtual void}
  } {}
  Function {setOverlay(const PhysicalImage<unsigned char,3>::Pointer img)} {selected return_type {virtual void}
  } {}
} 
