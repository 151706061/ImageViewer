# data file for the Fltk User Interface Designer (fluid)
version 1.0011 
header_name {.h} 
code_name {.cxx} 
gridx 5 
gridy 5 
snap 3
class ThinPlateSplinesApplicationGUI {open : {public ThinPlateSplinesApplicationBase}
} {
  Function {ThinPlateSplinesApplicationGUI()} {open
  } {
    Fl_Window controlWindow {
      label {Finite Elements Rendering} open
      xywh {10 20 1010 538} resizable
      code0 {\#include "ThinPlateSplinesApplicationBase.h"} visible
    } {
      Fl_Menu_Bar {} {open
        xywh {0 0 1010 25}
      } {
        submenu {} {
          label File
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label Quit
            callback {this->Quit();}
            xywh {0 0 100 20}
          }
        }
        submenu {} {
          label View
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label {Coordinate Axes}
            callback {this->DisplayAxes();}
            xywh {10 10 100 20}
          }
        }
        submenu {} {
          label Time
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label {Time Probes}
            callback {this->ShowTimeProbes();}
            xywh {0 0 100 20}
          }
        }
        submenu {} {
          label Parameters
          xywh {0 0 100 20}
        } {
          menuitem {} {
            label {Elastic Body Spline}
            callback {elasticBodySplineParametersWindow->show();}
            xywh {0 0 100 20}
          }
        }
      }
      Fl_Group {} {
        xywh {15 40 800 485} box DOWN_FRAME
      } {
        Fl_Box m_FlRenderWindowInteractor {
          xywh {25 50 780 465} box DOWN_FRAME
          code0 {\#include "vtkFlRenderWindowInteractor.h"}
          code1 {m_FlRenderWindowInteractor->SetRenderWindow( m_RenderWindow );}
          class vtkFlRenderWindowInteractor
        }
      }
      Fl_Group {} {
        label {Target LandMarks}
        xywh {830 345 165 140} box ENGRAVED_FRAME
      } {
        Fl_Counter targetLandMarkIdCounter {
          label {LandMark Id}
          callback {this->SelectTargetLandMark();}
          xywh {850 370 130 25} align 1 minimum 0 maximum 10000 step 1
          code0 {o->lstep(10);}
        }
        Fl_Value_Input xTargetValueInput {
          label {x :}
          callback {this->UpdateSelectedTargetLandMark();}
          xywh {869 399 110 25}
        }
        Fl_Value_Input yTargetValueInput {
          label {y :}
          callback {this->UpdateSelectedTargetLandMark();}
          xywh {869 424 110 25}
        }
        Fl_Value_Input zTargetValueInput {
          label {z :}
          callback {this->UpdateSelectedTargetLandMark();}
          xywh {869 449 110 25}
        }
      }
      Fl_Group {} {
        label {Source LandMarks}
        xywh {831 170 165 140} box ENGRAVED_FRAME
      } {
        Fl_Counter sourceLandMarkIdCounter {
          label {LandMark Id}
          callback {this->SelectSourceLandMark();}
          xywh {851 192 130 25} align 1 minimum 0 maximum 10000 step 1
          code0 {o->lstep(10);}
        }
        Fl_Value_Input xSourceValueInput {
          label {x :}
          callback {this->UpdateSelectedSourceLandMark();}
          xywh {870 221 110 25}
        }
        Fl_Value_Input ySourceValueInput {
          label {y :}
          callback {this->UpdateSelectedSourceLandMark();}
          xywh {870 246 110 25}
        }
        Fl_Value_Input zSourceValueInput {
          label {z :}
          callback {this->UpdateSelectedSourceLandMark();}
          xywh {870 271 110 25}
        }
      }
      Fl_Button {} {
        label {Map Points}
        callback {this->MapPoints();}
        xywh {855 500 125 25}
      }
      Fl_Group {} {
        label {Spline Kernels}
        xywh {830 65 165 80} box ENGRAVED_FRAME
      } {
        Fl_Choice splineKernelVTKChoice {
          label {VTK }
          xywh {875 105 110 25}
        } {
          menuitem {} {
            label R
            xywh {15 15 100 20}
          }
          menuitem {} {
            label {R2.Log(R)}
            xywh {25 25 100 20}
          }
        }
        Fl_Choice splineKernelITKChoice {
          label {ITK  } selected
          xywh {875 75 110 25}
        } {
          menuitem {} {
            label {Thin Plate}
            xywh {5 5 100 20}
          }
          menuitem {} {
            label {Thin Plate R2.LogR}
            xywh {15 15 100 20}
          }
          menuitem {} {
            label {Elastic Body}
            xywh {15 15 100 20}
          }
          menuitem {} {
            label Volume
            xywh {25 25 100 20}
          }
        }
      }
    }
    Fl_Window elasticBodySplineParametersWindow {
      label {Elastic Body Spline Parameters}
      xywh {249 94 293 100} hide
    } {
      Fl_Value_Slider {} {
        label Alpha
        callback {m_ElasticBodySplineTransformITK->SetAlpha( o->value() );}
        xywh {25 45 240 20} type {Horz Knob} align 1 maximum 2
      }
    }
  }
  Function {~ThinPlateSplinesApplicationGUI()} {return_type virtual
  } {
    code {this->Hide();} {}
  }
  Function {Show(void)} {return_type {virtual void}
  } {
    code {controlWindow->show();
m_FlRenderWindowInteractor->show();} {}
  }
  Function {Hide(void)} {open return_type {virtual void}
  } {
    code {controlWindow->hide();
elasticBodySplineParametersWindow->hide();} {}
  }
  Function {Quit(void)} {return_type {virtual void}
  } {
    code {this->Hide();} {}
  }
} 
